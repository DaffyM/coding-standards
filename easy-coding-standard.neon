includes:
    # pick set from https://github.com/Symplify/EasyCodingStandard/tree/master/config
    - vendor/symplify/easy-coding-standard/config/psr2.neon

checkers:
    - PHP_CodeSniffer\Standards\PSR1\Sniffs\Methods\CamelCapsMethodNameSniff
#
#        <!-- Fine-tuning of PSR-2 standard -->
#        <rule ref="Generic.Files.LineLength.TooLong">
#            <!--
#                Lower the severity so that this warning is ignored with default severity.
#                We can use this sniff for code-reviews but it does not block continuous integration.
#                Sometimes, there is no other way than have longer lines. For example when using
#                fully-qualified namespaces in type hinting comments.
#                Using @codingStandardsIgnoreLine to annotate comments would be absurd.
#            -->
#            <severity>3</severity>
#        </rule>
#
    # Custom ShopSys standards
#        <rule ref="Generic.CodeAnalysis.EmptyStatement">
#            <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"/>
#        </rule>
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\ForLoopShouldBeWhileLoopSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\ForLoopWithTestFunctionCallSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\JumbledIncrementerSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\UnconditionalIfStatementSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\TodoSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\FixmeSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Formatting\NoSpaceAfterCastSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\CallTimePassByReferenceSniff
    PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff:
        absoluteComplexity: 13
    - PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\ConstructorNameSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\CamelCapsFunctionNameSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\DiscourageGotoSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\NoSilencedErrorsSniff
    - PHP_CodeSniffer\Standards\MySource\Sniffs\PHP\GetRequestDataSniff
    - PHP_CodeSniffer\Standards\PEAR\Sniffs\Commenting\InlineCommentSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ValidClassNameSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff
    - PHP_CodeSniffer\Standards\Generic\Sniffs\Formatting\DisallowMultipleStatementsSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\DisallowSizeFunctionsInLoopsSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EvalSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\GlobalKeywordSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\InnerFunctionsSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\LowercasePHPFunctionsSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\NonExecutableCodeSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\Scope\StaticThisUsageSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\Strings\DoubleQuoteUsageSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\CastSpacingSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff
    - PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\LogicalOperatorSpacingSniff
    - ShopSys\CodingStandards\Sniffs\ForbiddenExitSniff
    - ShopSys\CodingStandards\Sniffs\ForbiddenSuperGlobalSniff

parameters:
    skip_codes:
        # private properties should not start with "_"
        - PHP_CodeSniffer\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.PrivateNoUnderscore
